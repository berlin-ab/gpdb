resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:
  - name: gpdb_src
    type: pull-request
    source:
      repository: berlin-ab/gpdb
      access_token: {{berlin-gpdb-git-access-token}}
      ignore_paths:
      - gpdb-doc/*
      - README*

  - name: docker-image
    type: docker-image
    source:
      repository: adamberlinpivotal/ubuntu-18-gpdb
      tag: latest
      
anchors:
  - &pr_failure
    put: report_pr_failure
    resource: gpdb_src
    params:
      path: gpdb_src
      status: failure
      
  - &pr_pending
    put: report_pr_pending
    resource: gpdb_src
    params:
      path: gpdb_src
      status: pending
      
  - &pr_success
    put: report_pr_success
    resource: gpdb_src
    params:
      path: gpdb_src
      status: success

  - &fetch_pr
    get: gpdb_src
    trigger: true
    version: every
    on_failure: *pr_failure

  - &fetch_image
    get: image
    resource: docker-image
    on_failure: *pr_failure

tasks:
  - &task
    image: image
    tags: [pr-pipeline]
    file: gpdb_src/concourse/pr_pipeline/task.yml
    timeout: 3h
    on_failure: *pr_failure
        
  - &test_regress
    <<: *task
    task: test_regress
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/test/regress installcheck

  - &test_isolation2
    <<: *task
    task: test_isolation2
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/test/isolation2 installcheck

  - &test_regress_with_orca
    <<: *task
    task: test_regress_with_orca
    params:
      PGOPTIONS: '-c optimizer=on'
      MAKE_TASK: -C src/test/regress installcheck

  - &test_isolation2_with_orca
    <<: *task
    task: test_isolation2_with_orca
    params:
      PGOPTIONS: '-c optimizer=on'
      MAKE_TASK: -C src/test/isolation2 installcheck
      
  - &test_src_bin
    <<: *task
    task: test_src_bin
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/bin installcheck

  - &test_unit
    <<: *task
    task: test_unit
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: unittest-check

  - &test_gpmgmt
    <<: *task
    task: test_gpmgmt
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C gpMgmt/bin installcheck

  - &test_gpcontrib
    <<: *task
    task: test_gpcontrib
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C gpcontrib installcheck

  - &test_perl
    <<: *task
    task: test_perl
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/test/perl installcheck

  - &test_isolation
    <<: *task
    task: test_isolation
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/test/isolation installcheck

  - &test_fsync
    <<: *task
    task: test_fsync
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/test/fsync installcheck

  - &test_walrep
    <<: *task
    task: test_walrep
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/test/walrep installcheck

  - &test_heap_checksum
    <<: *task
    task: test_heap_checksum
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/test/heap_checksum installcheck

  - &test_kerberos
    <<: *task
    task: test_kerberos
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/test/kerberos installcheck

  - &test_modules
    <<: *task
    task: test_modules
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/test/modules installcheck

  - &test_ssl
    <<: *task
    task: test_ssl
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/test/ssl check
      
  - &test_pl
    <<: *task
    task: test_pl
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/pl installcheck
  
  - &test_interfaces_gppc
    <<: *task
    task: test_interfaces_gppc
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C src/interfaces/gppc installcheck
  
  - &test_contrib_formatter_fixedwidth
    <<: *task
    task: test_contrib_formatter_fixedwidth
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C contrib/formatter_fixedwidth installcheck
  
  - &test_contrib_extprotocol
    <<: *task
    task: test_contrib_extprotocol
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C contrib/extprotocol installcheck
      
  - &test_contrib_dblink
    <<: *task
    task: test_contrib_dblink
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C contrib/dblink installcheck
      
  - &test_contrib_indexscan
    <<: *task
    task: test_contrib_indexscan
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C contrib/indexscan installcheck
      
  - &test_contrib_hstore
    <<: *task
    task: test_contrib_hstore
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C contrib/hstore installcheck

  - &test_contrib_pgcrypto
    <<: *task
    task: test_contrib_pgcrypto
    params:
      PGOPTIONS: '-c optimizer=off'
      MAKE_TASK: -C contrib/pgcrypto installcheck

jobs:
  - name: compile_and_test_gpdb
    public: true
    max_in_flight: 10
    plan:
    - aggregate:
      - *fetch_pr
      - *fetch_image

    - *pr_pending

    - aggregate:
      - *test_regress
      - *test_regress_with_orca
      - *test_isolation2
      - *test_isolation2_with_orca
      - *test_perl
      - *test_isolation
      - *test_fsync
      - *test_walrep
      - *test_heap_checksum
      - *test_kerberos
      - *test_modules
      - *test_ssl
      - *test_src_bin
      - *test_unit
      - *test_gpmgmt
      - *test_gpcontrib
      - *test_pl
      - *test_interfaces_gppc
      - *test_contrib_formatter_fixedwidth
      - *test_contrib_extprotocol
      - *test_contrib_dblink
      - *test_contrib_indexscan
      - *test_contrib_hstore
      - *test_contrib_pgcrypto

    - *pr_success
