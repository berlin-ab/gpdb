resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:
  - name: gpdb_src
    type: pull-request
    source:
      repository: berlin-ab/gpdb
      access_token: {{berlin-gpdb-git-access-token}}
      ignore_paths:
      - gpdb-doc/*
      - README*

  - name: docker-image
    type: docker-image
    source:
      repository: adamberlinpivotal/ubuntu-18-gpdb
      tag: latest
      
anchors:
  - &pr_failure
    put: report_pr_failure
    resource: gpdb_src
    params:
      path: gpdb_src
      status: failure
      
  - &pr_pending
    put: report_pr_pending
    resource: gpdb_src
    params:
      path: gpdb_src
      status: pending
      
  - &pr_success
    put: report_pr_success
    resource: gpdb_src
    params:
      path: gpdb_src
      status: success

  - &fetch_pr
    get: gpdb_src
    trigger: true
    version: every
    on_failure: *pr_failure

  - &fetch_image
    get: image
    resource: docker-image
    on_failure: *pr_failure
      
tasks:
  - &icw
    task: icw
    image: image
    file: gpdb_src/concourse/pr_pipeline/task.yml
    timeout: 3h
    on_failure: *pr_failure
        
  - &icw_orca
    <<: *icw
    params:
      MAKE_TASK: installcheck-world
      CONFIGURE_FLAGS: --without-zstd
      PGOPTIONS: '-c optimizer=on'
    
  - &icw_planner
    <<: *icw
    params:
      MAKE_TASK: installcheck-world
      CONFIGURE_FLAGS: --without-zstd
      PGOPTIONS: '-c optimizer=off'
        
jobs:
  - name: compile_and_test_gpdb_with_planner
    public: true
    max_in_flight: 10
    plan:
    - aggregate:
      - *fetch_pr
      - *fetch_image

    - *pr_pending

    - aggregate:
        - *icw_planner

    - *pr_success
    
  - name: compile_and_test_gpdb_with_gporca
    public: true
    max_in_flight: 10
    plan:
    - aggregate:
      - *fetch_pr
      - *fetch_image

    - *pr_pending

    - aggregate:
        - *icw_orca

    - *pr_success
